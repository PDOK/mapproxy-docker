apiVersion: apps/v1
kind: Deployment
metadata:
  name: mapproxy-example
  labels:
    app: mapproxy-example
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mapproxy-example  
  template:
    metadata:
      labels:
        app: mapproxy-example
    annotations:
    spec:
      containers:
        - name: mapproxy
          image: local-registry:5000/mapproxy:test-1
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: DEBUG
              value: "1"
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 0.5
          volumeMounts:
            - name: mapproxy
              mountPath: /srv/mapproxy/config/mapproxy.yaml
              subPath: mapproxy.yaml
            - name: lighttpd
              mountPath: /srv/mapproxy/config/include.conf
              subPath: include.conf
            - name: lighttpd
              mountPath: /srv/mapproxy/config/lighttpd.auth
              subPath: lighttpd.auth
        - name: apache-exporter
          image: lusotycoon/apache-exporter:v0.7.0
          imagePullPolicy: Always
          args: ["-scrape_uri=http://$(AUTH)@localhost/server-status?auto"]
          ports:
            - containerPort: 9117
          env:
            - name: AUTH
              valueFrom:
                configMapKeyRef:
                  name: lighttpd-config
                  key: lighttpd.auth
      volumes:
        - name: mapproxy
          projected:
            sources:
              - configMap:
                  name: mapproxy-config
        - name: lighttpd
          projected:
            sources:
              - configMap:
                  name: lighttpd-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lighttpd-config
data:
  lighttpd.auth: admin:admin
  include.conf: |-
    server.modules += ( "mod_auth" )
    server.modules += ( "mod_status" )

    status.status-url = "/server-status"
    auth.backend = "plain"
    auth.backend.plain.userfile = "/srv/mapproxy/config/lighttpd.auth"

    $HTTP["url"] =~ "^/server-status" {
      auth.require = ( "" =>
      (
        "method" => "basic",
        "realm" => "Protected Monitoring Area",
        "require" => "user=admin"
      )
    )
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mapproxy-config
data:
  mapproxy.yaml: |-
    # -------------------------------
    # MapProxy configuration.
    #
    # OSM example based on https://wiki.openstreetmap.org/wiki/MapProxy
    # -------------------------------
    services:
      demo:
      wmts:
        kvp: true
        restful: true

    layers:
      - name: osm
        title: Open Streetmap Tiles
        sources: [osm_cache]

    caches:
      osm_cache:
        sources: [osm_tiles]
        grids: [GLOBAL_MERCATOR]
        format: image/png
        cache:
          type: geopackage
          filename: /srv/mapproxy/cache_data/osm.gpkg
          table_name: osm_tiles

    sources:
      osm_tiles:
        type: tile
        url: http://c.tile.openstreetmap.org/%(tms_path)s.%(format)s
        grid: osm_grid 

    grids:
      osm_grid:
        srs: EPSG:900913
        origin: nw

    globals:
      cache:
        base_dir: '/srv/mapproxy/cache_data'
        lock_dir: '/srv/mapproxy/cache_data/locks'
        tile_lock_dir: '/srv/mapproxy/cache_data/tile_locks'

      image:
          resampling_method: bilinear
          jpeg_quality: 90
---
apiVersion: v1
kind: Service
metadata:
  name: mapproxy-example
  labels:
    service: mapproxy-example
spec:
  ports:
    - port: 9117
      protocol: TCP  
      name: apache-exporter
    - port: 80
      protocol: TCP
      name: mapproxy
  selector:
    app: mapproxy-example
